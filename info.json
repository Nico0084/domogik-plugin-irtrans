{
    "products" : [{
            "name" : "IRTrans Transmitter LAN",
            "id" : "irtrans_lan",
            "documentation" : "http://www.irtrans.de/en/",
            "type" : "irtrans.irtrans_lan"
        }, {
            "name" : "IR WebSocket server Transmitter",
            "id" : "irwsserver",
            "documentation" : "http://github/",
            "type" : "irtrans.irwsserver"
        }
    ],
    "configuration" : [],
    "xpl_commands" : {},
    "xpl_stats" : {},
    "commands" : {
        "send_bintimings" : {
            "name" : "Send standard code",
            "return_confirmation" : true,
            "parameters" : [{
                    "key" : "code",
                    "data_type" : "DT_String",
                    "conversion" : ""
                }, {
                    "key" : "timing",
                    "data_type" : "DT_String",
                    "conversion" : ""
                }
            ]
        },
        "send_raw" : {
            "name" : "Send raw code",
            "return_confirmation" : true,
            "parameters" : [{
                    "key" : "code",
                    "data_type" : "DT_String",
                    "conversion" : ""
                }
            ]
        },
        "send_hexa" : {
            "name" : "Send hexa code",
            "return_confirmation" : true,
            "parameters" : [{
                    "key" : "code",
                    "data_type" : "DT_String",
                    "conversion" : ""
                }
            ]
        }
    },
    "sensors" : {
        "code_ir" : {
            "name" : "Code IR received",
            "incremental": false,
            "data_type" : "DT_String",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
                }
        },
        "ack_ir_cmd" : {
            "name" : "code for ack command",
            "incremental": false,
            "data_type" : "DT_String",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": false,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
                }
        },
        "power" : {
            "name" : "status of power device",
            "incremental": false,
            "data_type" : "DT_Switch",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": false,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
                }
        }
    },
    "device_types" : {
        "irtrans.irtrans_lan" : {
            "description" : "IRTrans lan device",
            "id" : "irtrans.irtrans_lan",
            "name" : "IRTrans Transmitter",
            "commands" : ["send_bintimings", "send_raw", "send_hexa"],
            "sensors" : ["code_ir","ack_ir_cmd","power"],
            "parameters" : [{
                    "key" : "ir_coder",
					"xpl": false,
                    "description" : "IR Encoder type name (DAIKIN, RC5,..) ",
                    "type" : "string"
                }, {
				    "description" : "Path where IRTrans softwares are locate.",
					"xpl": false,
				    "key" : "server_path",
				    "type" : "string"
				}, {
				    "description" : "IP of server can be localhost or on an other machine.",
					"xpl": false,
				    "key" : "ip_server",
				    "type" : "ipv4"
				}, {
                    "key" : "irtrans_ip",
					"xpl": false,
                    "description" : "IP of IRTrans modul",
                    "type" : "ipv4"
                }
            ]
        },
        "irtrans.irwsserver" : {
            "description" : "IR WebSocket server device",
            "id" : "irtrans.irwsserver",
            "name" : "IR WS Server Transmitter",
            "commands" : ["send_bintimings", "send_raw", "send_hexa"],
            "sensors" : ["code_ir","ack_ir_cmd","power"],
            "parameters" : [{
                    "key" : "ir_coder",
					"xpl": false,
                    "description" : "IR Encode type name (DAIKIN, RC5)",
                    "type" : "string"
                }, {
				    "description" : "IP of webSocket server.",
					"xpl": false,
				    "key" : "ip_server",
				    "type" : "ipv4"
				}, {
                    "key" : "port_server",
					"xpl": false,
                    "description" : "Port of webSocket server.",
                    "type" : "integer"
                }, {
                    "key" : "ssl_activate",
					"xpl": false,
                    "description" : "ssl activation",
                    "type" : "boolean"
                }, {
                    "key" : "ssl_certificate",
					"xpl": false,
                    "description" : "ssl certificate",
                    "type" : "string"
                }, {
                    "key" : "ssl_key",
					"xpl": false,
                    "description" : "ssl key",
                    "type" : "string"
                }, {
                    "key" : "ir_repeat",
					"xpl": false,
                    "description" : "number of repeat if sendind infrared code fail (default : 3)",
                    "type" : "integer"
                }, {
                    "key" : "ir_tolerance",
					"xpl": false,
                    "description" : "Tolerance in us for pulse/pause pairs for decoded infrared code (default : 150 us)",
                    "type" : "integer"
                }, {
                    "key" : "ir_large_tolerance",
					"xpl": false,
                    "description" : "Large tolerance in us for decoded infrared code, according to ir_max_out (default : 300 us)",
                    "type" : "integer"
                }, {
                    "key" : "ir_max_out",
					"xpl": false,
                    "description" : "Number of pulse/pair in ir_large_tolerance fir decoded infrared code (default : 10)",
                    "type" : "integer"
                }
            ]
        }
    },
    "identity" : {
        "author" : "Nico0084",
        "author_email" : "nico84dev at gmail.com",
        "tags" : ["IR Transmitter"],
        "dependencies" : [],
        "description" : "Send/receive IR code from to IRTrans transmitter modul",
        "domogik_min_version" : "0.5.0",
        "name" : "irtrans",
         "type" : "plugin",
        "version" : "0.2"
    },
    "json_version" : 2
}
